1.  Циклы напрямую с массивами не связаны, но у циклов есть счетчик, который может выступать в качестве индекса массива. Поэтому соединить их не составляет никакого труда:

// Создаем массив
const userNames = ['petya', 'vasya', 'evgeny'];

// Определяем цикл
// Начальное значение счетчика i = 0 – вычисляется один раз перед началом выполнения
// Условие остановки i < userNames.length – выполняется перед каждой итерацией
// Изменение счетчика i += 1 – выполняется после каждой итерации
for (let i = 0; i < userNames.length; i += 1) {
  // Этот код выполняется для каждого элемента
  console.log(userNames[i]);
}

// => 'petya'
// => 'vasya'
// => 'evgeny'
В данном коде создаем массив из трех элементов — имен. Далее в цикле обходим массив и выводим на экран все имена так, что каждое имя оказывается на новой строке (console.log автоматически делает перевод строки).
2.  Обратный порядок
const userNames = ['petya', 'vasya', 'evgeny'];

for (let i = 0; i < userNames.length; i += 1) {
  const index = (userNames.length - 1) - i;
  console.log(userNames[index]);
}
Другой способ подразумевает обход в обратном порядке, от верхней границы до нижней, то есть от последнего индекса массива к первому (нулю, так как индексирование начинается с нуля). В такой ситуации код меняется на следующий:

const userNames = ['petya', 'vasya', 'evgeny'];

// Начальное значение i соответствует последнему индексу в массиве
for (let i = userNames.length - 1; i >= 0; i -= 1) {
  console.log(userNames[i]);
}
При таком обходе проверка остановки должна быть именно на >=, иначе элемент с индексом 0 не попадет в цикл.

3.  Изменение:
Во время обхода массива его можно не только читать, но и модифицировать. Предположим, что перед нами стоит задача нормализации списка электронных адресов — например, приведение их к нижнему регистру. Тогда код будет выглядеть так:

const emails = ['VASYA@gmAil.com', 'iGoR@yandex.RU', 'netiD@hot.CoM'];

console.log(emails);
// => [ 'VASYA@gmAil.com', 'iGoR@yandex.RU', 'netiD@hot.CoM' ]

for (let i = 0; i < emails.length; i += 1) {
  const email = emails[i];

  // toLowerCase() — стандартный метод js,
  // преобразующий строку в нижний регистр
  const normalizedEmail = email.toLowerCase();
  // Заменяем значение
  emails[i] = normalizedEmail;
}

console.log(emails);
// => [ 'vasya@gmail.com', 'igor@yandex.ru', 'netid@hot.com' ]